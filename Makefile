
PWD := $(CURDIR)
LINUX_SRC := ./linux-4.1.10
KERNEL_BUILD := $(PWD)/kernel
EXPLOIT_SRC := ./exploit
ROOT_FS := $(PWD)/rootfs/root

obj-m += exm.o
exm-y := $(EXPLOIT_SRC)/src/module/module.o

ccflags-y := -I../exploit/include

EXPLOIT_INCLUDES := $(shell find $(EXPLOIT_SRC)/include -type f -name "*.h")

CROSS := CROSS_COMPILE=arm-linux-gnueabi- ARCH=arm

all: modules

FORCE:



kernel: kernel/arch/arm/boot/zImage

kernel/arch/arm/boot/zImage: kernel/.config
	$(MAKE) $(CROSS) -C $(LINUX_SRC) O=$(KERNEL_BUILD) zImage

menuconfig:
	$(MAKE) $(CROSS) -C $(LINUX_SRC) O=$(KERNEL_BUILD) menuconfig

exploit/exploit: FORCE
	$(MAKE) -C exploit

$(ROOT_FS)/exploit: exploit/exploit
	cp $< $@

exploit_install: $(ROOT_FS)/exploit

exm.ko: $(shell find $(EXPLOIT_SRC)/src/module -type f -name "*.c") $(EXPLOIT_INCLUDES)
	@echo AAAAAAAA $(ccflags-y)
	$(MAKE) $(CROSS) -C $(LINUX_SRC) M=$(PWD) O=$(KERNEL_BUILD) modules

modules: exm.ko


$(ROOT_FS)/lib/modules/*/extra/exm.ko: exm.ko
	$(MAKE) $(CROSS) -C $(LINUX_SRC) M=$(PWD) O=$(KERNEL_BUILD) INSTALL_MOD_PATH=$(ROOT_FS) modules_install

modules_install: $(ROOT_FS)/lib/modules/*/extra/exm.ko

modules_clean:
	$(MAKE) $(CROSS) -C $(LINUX_SRC) M=$(PWD) O=$(KERNEL_BUILD) clean

clean: modules_clean

rootfs/root.sqfs: exploit_install modules_install
	$(MAKE) -C rootfs

run: rootfs/root.sqfs
	qemu-system-arm -M virt -m 256 -smp cores=4 -nographic \
		-kernel kernel/arch/arm/boot/zImage -append "root=/dev/vda rw" \
		-drive if=none,format=raw,file=rootfs/root.sqfs,id=rootfs -device virtio-blk-pci,drive=rootfs